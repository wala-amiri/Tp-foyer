
services:
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=WalaAmiri20!
      - MYSQL_DATABASE=achat_db
    ports:
      - "3306:3306"
    volumes:
      - db:/var/lib/mysql

  app-timesheet:
    depends_on:
      - mysqldb
    image: waleamiri/tp-foyer:5.0.0
    ports:
      - "8089:8089"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/achat_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: WalaAmiri20!
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SERVER_PORT: 8089
      SERVER_SERVLET_CONTEXT_PATH: /tpfoyer
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: "true"
      MANAGEMENT_ENDPOINTS_WEB_BASE_PATH: /actuator

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  k6-test:
    image: grafana/k6
    depends_on:
      - app-timesheet
    volumes:
      - ./k6:/scripts
    entrypoint: [ "k6", "run", "/scripts/load-test.js" ]
    restart: on-failure
    stdin_open: true
    tty: true

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data

  zap-scan:
    image: softwaresecurityproject/zap-stable
    container_name: zap_scan
    depends_on:
      app-timesheet:
        condition: service_started
    command: >
      zap-baseline.py 
      -t http://app-timesheet:8089/tpfoyer 
      -r report.html
    volumes:
      - ./zap-report:/zap/wrk


volumes:
  db:
  grafana-data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  nexus-data:

